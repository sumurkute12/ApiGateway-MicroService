version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto11
      docker: 18
  pre_build:
    commands:
      - echo "Pre_build"
      - echo "Logging in to Amazon ECR"
      - $(aws ecr get-login  --no-include-email --region us-east-1)
  build:
    commands:
      - echo "Build"
      - echo "Entered build phase"
      - echo "Building Java application"
      - cd  RPM-API-gatway-auth
      - mvn -DskipTests clean package
      - docker build -t rpm-api-gatway-auth-repo .
      - docker tag rpm-api-gatway-auth-repo:latest 234825976347.dkr.ecr.us-east-2.amazonaws.com/rpm-api-gatway-auth-repo:latest
  post_build:
    commands:
      - echo "Post_build"
      - docker push 234825976347.dkr.ecr.us-east-2.amazonaws.com/rpm-api-gatway-auth-repo:latest
      - printf '[{"name":"rpm-api-gatway-auth-container","imageUri":"%s"}]' 234825976347.dkr.ecr.us-east-2.amazonaws.com/rpm-api-gatway-auth-repo:latest > taskdefinition.json
      - cat taskdefinition.json

artifacts:
  files:
      - RPM-API-gatway-auth/taskdefinition.json
      
      
name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar